<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="29fa18b0-03e7-4bcf-975a-6f22899c2a82" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/advent_of_code/day4.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/advent_of_code/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/advent_of_code/core.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectFrameBounds" fullScreen="true">
    <option name="width" value="1280" />
    <option name="height" value="800" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="cursive.last.file.extension./Users/BenScudder/dev/advent-of-code/src" value="clj" />
    <property name="cursive.last.file.extension./Users/ben.scudder/dev/advent-of-code-2019/src" value="clj" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="ReplState" timestamp="1577472925842">{:repl-history {:ide [], :local [{:command &quot;(in-ns        'advent-of-code.day3\n              \n  )&quot;, :offset 53, :ns &quot;advent-of-code.core&quot;} {:command &quot;(cons [1 2 3] 4)&quot;, :offset 16, :ns &quot;advent-of-code.core&quot;} {:command &quot;(cons 4 [1 2 3])&quot;, :offset 16, :ns &quot;advent-of-code.core&quot;} {:command &quot;(cons 4 [9])&quot;, :offset 12, :ns &quot;advent-of-code.core&quot;} {:command &quot;(conj 4 [9])&quot;, :offset 12, :ns &quot;advent-of-code.core&quot;} {:command &quot;(conj [4] [9])&quot;, :offset 14, :ns &quot;advent-of-code.core&quot;} {:command &quot;(conj [0 0] [1 1]) &quot;, :offset 18, :ns &quot;advent-of-code.core&quot;} {:command &quot;(first \&quot;A493\&quot;)&quot;, :offset 14, :ns &quot;advent-of-code.core&quot;} {:command &quot;(require 'clojure.string)&quot;, :offset 25, :ns &quot;advent-of-code.core&quot;} {:command &quot;(subs \&quot;shit\&quot; 0 1)&quot;, :offset 17, :ns &quot;advent-of-code.core&quot;} {:command &quot;()&quot;, :offset 1} {:command &quot;(subs \&quot;shit\&quot; 1)&quot;, :offset 15, :ns &quot;advent-of-code.core&quot;} {:command &quot;(reduce (fn [acc curr] (println acc)) [1 2 3])&quot;, :offset 46, :ns &quot;advent-of-code.core&quot;} {:command &quot;(reduce (fn [acc curr] (println acc)) [0] [1 2 3])&quot;, :offset 50, :ns &quot;advent-of-code.core&quot;} {:command &quot;(reduce\n  (fn [coords instruction]\n    (conj\n      coords\n      (println\n        (last coords)\n        (subs instruction 0 1)\n        (subs instruction 1))))\n  [[0 0]]\n  [\&quot;A8\&quot;])&quot;, :offset 177, :ns &quot;advent-of-code.core&quot;} {:command &quot;(get-new-coords [0 0] \&quot;U\&quot; 8)&quot;, :offset 28, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(get-wire-vectors)&quot;, :offset 18, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(reduce\n  (fn [coords instruction]\n    (conj\n      coords\n      (get-new-coords\n        (last coords)\n        (subs instruction 0 1)\n        (edn/read-string (subs instruction 1)))))\n  [[0 0]]\n  [\&quot;A8\&quot;])&quot;, :offset 202, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(require 'clojure.edn :as edn)&quot;, :offset 30, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(require 'clojure.edn)&quot;, :offset 22, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(clojure.edn/read-string (subs \&quot;A4\&quot; 1))&quot;, :offset 39, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(last [[0 0]])&quot;, :offset 14, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(conj [[0 0]] [9 9])&quot;, :offset 20, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(reduce\n  (fn [coords instruction]\n    (conj\n      coords\n      (get-new-coords\n        (last coords)\n        (subs instruction 0 1)\n        (clojure.edn/read-string (subs instruction 1)))))\n  [[0 0]]\n  [[\&quot;A8\&quot;]])&quot;, :offset 212, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(reduce\n  (fn [coords instruction]\n    (conj\n      coords\n      (get-new-coords\n        (last coords)\n        (subs instruction 0 1)\n        (clojure.edn/read-string (subs instruction 1)))))\n  [[0 0]]\n  [\&quot;A8\&quot;])&quot;, :offset 210, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(subs \&quot;A3\&quot; 0 1)&quot;, :offset 15, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(get-new-coords [0 0] \&quot;A\&quot;)&quot;, :offset 26, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(reduce\n  (fn [coords instruction]\n    (conj\n      coords\n      (get-new-coords\n        (last coords)\n        (subs instruction 0 1)\n        (clojure.edn/read-string (subs instruction 1)))))\n  [[0 0]]\n  [\&quot;U8\&quot;])&quot;, :offset 210, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(take-while #(not= #{[0 0] [0 1]}) #{1 2 3})&quot;, :offset 44, :ns &quot;advent-of-code.core&quot;} {:command &quot;(take-while #(not= #{[0 0] [0 1]} %) #{1 2 3})&quot;, :offset 46, :ns &quot;advent-of-code.core&quot;} {:command &quot;(take-while #(not= #{[0 0] [0 1]} %) #{1 2 3 [0 0]})&quot;, :offset 52, :ns &quot;advent-of-code.core&quot;} {:command &quot;(#{1 2 3} 3)&quot;, :offset 12, :ns &quot;advent-of-code.core&quot;} {:command &quot;(#{1 2 3} 5)&quot;, :offset 12, :ns &quot;advent-of-code.core&quot;} {:command &quot;(take-while #(nil? (#{[0 0] [0 1]} %)) #{1 2 3 [0 0]})&quot;, :offset 54, :ns &quot;advent-of-code.core&quot;} {:command &quot;(nil? 3)&quot;, :offset 8, :ns &quot;advent-of-code.core&quot;} {:command &quot;(nil? nil)&quot;, :offset 10, :ns &quot;advent-of-code.core&quot;} {:command &quot;(map println #{1 2 3 [0 0]})&quot;, :offset 28, :ns &quot;advent-of-code.core&quot;} {:command &quot;(take-while #(nil? (#{[0 0] [0 1]} %)) 1 2 3 [0 0])&quot;, :offset 51, :ns &quot;advent-of-code.core&quot;} {:command &quot;(take-while #(nil? (#{[0 0] [0 1]} %)) [1 2 3 [0 0]])&quot;, :offset 53, :ns &quot;advent-of-code.core&quot;} {:command &quot;(get-intersections)&quot;, :offset 19, :ns &quot;advent-of-code.day3&quot;} {:command &quot;*ns*&quot;, :offset 4, :ns &quot;advent-of-code.core&quot;} {:command &quot;(= (first a) (last a))&quot;, :offset 22, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(in-ns 'advent-of-code.day3)&quot;, :offset 28, :ns &quot;advent-of-code.core&quot;} {:command &quot;(first (get-step-sets))&quot;, :offset 23, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(first (map get-all-steps-vector (get-wire-instruction-vectors)))&quot;, :offset 65, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(first\n  (first (map get-all-steps-vector (get-wire-instruction-vectors))))&quot;, :offset 75, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(first\n  (first (drop 1 (map get-all-steps-vector (get-wire-instruction-vectors)))))&quot;, :offset 84, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(first\n  (first (map #(drop 1 (get-all-steps-vector %)) (get-wire-instruction-vectors))))&quot;, :offset 89, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(drop 1 [1 2 3])&quot;, :offset 16, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(first (first (map #(drop 1 (get-all-steps-vector %)) (get-wire-instruction-vectors))))&quot;, :offset 87, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(first (first (get-step-sets)))&quot;, :offset 31, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(apply set/intersection [#{1 2 3} #{8 7 2}])&quot;, :offset 44, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(apply set/intersection (get-step-sets))&quot;, :offset 40, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(first (map #(drop 1 (get-all-steps-vector %)) (get-wire-instruction-vectors)))&quot;, :offset 79, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(#{1 2 3} 8)&quot;, :offset 12, :ns &quot;advent-of-code.day3&quot;} {:command &quot;intersections&quot;, :offset 13, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(nth [1 2 3] 0)&quot;, :offset 15, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(.indexOf (first (map #(drop 1 (get-all-steps-vector %)) (get-wire-instruction-vectors))) [990 63])&quot;, :offset 99, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(map println [1 2 3] [4 5 6])&quot;, :offset 29, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(map (.indexOf [1 2 3 4 5 6] %) [1 2 3] [4 5 6])&quot;, :offset 48, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(map #(.indexOf [1 2 3 4 5 6] %) [1 2 3] [4 5 6])&quot;, :offset 49, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(blah)&quot;, :offset 6, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(map + [1 2 3] [4 5 6])&quot;, :offset 23, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(in-ns 'advent-of-code.core)&quot;, :offset 28, :ns &quot;advent-of-code.day3&quot;} {:command &quot;(day3-solutions)&quot;, :offset 16, :ns &quot;advent-of-code.core&quot;} {:command &quot;(seq [1 2 3])&quot;, :offset 13, :ns &quot;advent-of-code.core&quot;} {:command &quot;(range 1 4)&quot;, :offset 11, :ns &quot;advent-of-code.core&quot;} {:command &quot;(in-ns 'advent-of-code.day4)&quot;, :offset 28, :ns &quot;advent-of-code.core&quot;} {:command &quot;(last input)&quot;, :offset 12, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(seq 1234)&quot;, :offset 10, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(map println 123)&quot;, :offset 17, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits)&quot;, :offset 25, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits 2234)&quot;, :offset 30, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(for [x 6]\n  (+ x))&quot;, :offset 19, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(for [x 6]\n  (+ x 0))&quot;, :offset 21, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(or 1 2)&quot;, :offset 8, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(partition-by = [1 2 3 4])&quot;, :offset 26, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(partition-by #(= 3 %) [1 2 3 4 5])&quot;, :offset 35, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(distinct [1 2 2 1 2])&quot;, :offset 22, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(dedupe [1 2 2 1 2])&quot;, :offset 20, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [1 2 2 1])&quot;, :offset 35, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(some? [1 2 2])&quot;, :offset 15, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(some? [false false])&quot;, :offset 21, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [ 1 2 3])&quot;, :offset 34, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(map #(not= % %2) [1 2 3 3] (dedupe [1 2 3]))&quot;, :offset 45, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(map #(not= % %2) [1 2 3 3] (dedupe [1 2 3 3]))&quot;, :offset 47, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [ 1 2 3 3])&quot;, :offset 36, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [1 2 3 3])&quot;, :offset 35, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [1 2 3])&quot;, :offset 33, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [1 2 2 3])&quot;, :offset 35, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [1 2 2 3 7 7])&quot;, :offset 39, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(has-dup-adjacent-digits [1 2 3 7 2 7])&quot;, :offset 39, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(apply #(comp = count) [[1 2] [1 2]])&quot;, :offset 37, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(apply (comp = count) [[1 2] [1 2]])&quot;, :offset 36, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(count [1 2])&quot;, :offset 13, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(apply count [[1 1] [1 2]])&quot;, :offset 27, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(partition 2 1 [1 2 3 4 5])&quot;, :offset 27, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(partition 1 1 [1 2 3 4 5])&quot;, :offset 27, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(partition 1 1 [1 2 3 4 1 5])&quot;, :offset 29, :ns &quot;advent-of-code.day4&quot;} {:command &quot;(filter has-dup-adjacent-digits [[1 2 2 4] [1 2 3 4]])&quot;, :offset 54, :ns &quot;advent-of-code.day4&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="nREPL" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="advent-of-code" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="ServiceViewManager">
    <option name="allServicesViewState">
      <serviceView>
        <treeState>
          <expand />
          <select />
        </treeState>
      </serviceView>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="29fa18b0-03e7-4bcf-975a-6f22899c2a82" name="Default Changelist" comment="" />
      <created>1576465483083</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1576465483083</updated>
      <workItem from="1576465487898" duration="361000" />
      <workItem from="1576466102785" duration="14160000" />
      <workItem from="1576903692693" duration="453000" />
      <workItem from="1576955387711" duration="7790000" />
    </task>
    <task id="LOCAL-00001" summary="Solved Day 2 Part 1">
      <created>1576554693871</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1576554693871</updated>
    </task>
    <task id="LOCAL-00002" summary="Solved Day 2 Part 2">
      <created>1576639596810</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1576639596810</updated>
    </task>
    <task id="LOCAL-00003" summary="Solved Day 3 Part 2">
      <created>1577464869535</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1577464869535</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Solved Day 2 Part 1" />
    <MESSAGE value="Solved Day 2 Part 2" />
    <MESSAGE value="Solved Day 3 Part 2" />
    <option name="LAST_COMMIT_MESSAGE" value="Solved Day 3 Part 2" />
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>